<?xml version="1.0" encoding="UTF-8"?>
<compositeCheatsheet name="Getting some data into Debrief NG">
	<taskGroup name="Getting started with Debrief NG" skip="false">
		<intro>
			This series of cheatsheets will guide you through creating your Debrief
			working environment, customising it according to your preferred file
			locations, and loading some analysis data.  <i>NoPrint</i>If you wish, you can widen
			this &apos;Welcome&apos; panel to make the tutorials easier to read.
			You may also find it easier to work through these cheat-sheets if you
			make the bottom section of this pane taller by dragging the central
			&apos;grab&apos; bar vertically upwards<i>NoPrint</i>
		</intro>
		<taskGroup kind="sequence" name="Welcome to Debrief NG" skip="true">
			<intro>Welcome to Getting Started with Debrief. In this tutorial, the first in a series
				aimed at getting you up to speed with the program, we will look at the following
				areas:<br/>• Welcome to Debrief <br/>• Document Conventions <br/>• Installing and
				Opening Debrief <br/>• Working within Debrief <br/>• Menus &amp; Toolbars <br/>• The
				Plot Editor <br/>• Shortcut Key Combinations <br/>• Chart Features By the end of
				this brief getting started guide, you will know where everything is in the program,
				how to work efficiently within the app, and be in the best position possible for the
				remaining tutorials.
			</intro>
			<onCompletion>That concludes this part of the “<b>Getting Started with Debrief</b>”
				tutorial, go over it again, or refer to it as needed. Next, proceed with the
					“<b>Working with Debrief</b>” tutorial.
			</onCompletion>
			<task kind="cheatsheet" name="Welcome to Debrief NG" skip="true">
				<intro>First though, a little background information.
				</intro>
				<onCompletion>Next we&apos;ll look at installing and opening Debrief.
				</onCompletion>				
			<param name="id" value="org.mwc.debrief.help.started.welcome_Debrief">
			</param>
			<param name="showIntro" value="true">
			</param>
			<param name="path" value="welcomeDebriefNG.xml">
			</param>
			</task>
			<task kind="cheatsheet" name="Installing and Opening Debrief" skip="true">
				<intro>Before you install Debrief, please check the following:<br/>• If you
					haven&apos;t installed Debrief before, ensure you have downloaded the latest
					version from Github (https://github.com/debrief/debrief/releases).<br/>• If you
					have already installed it, then please uninstall the existing version via
					<b>Windows</b> > <b>Start menu</b> > <b>Settings/Control Panel</b> >
					<b>Add/Remove Programs</b>.
				</intro>
				<onCompletion>It will take a few seconds to load and, once loaded, you will see the
					Welcome to Debrief NG page and 5 buttons.</onCompletion>				
				<param name="id" value="org.mwc.debrief.help.started.installing_Debrief">
				</param>
				<param name="showIntro" value="true">
				</param>
				<param name="path" value="installDebrief.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Welcome to DebriefNG (with Charts)" skip="true">
				<intro>The <b>Welcome</b> screen is displayed on your first visit to Debrief, but it is
					always accessible from within Debrief via the <b>Help</b> menu.<br/>When the page loads,
					you will see the following 5 buttons:<br/><b>• Overview</b> - if this is your first time
					using Debrief, it&apos;s a good idea to click on this button to get an overview of
					the features.<br/><b>• What’s New</b> - we&apos;re constantly updating the software, so if you
					want to see the exciting new features, click on this button.<br/><b>• First Steps</b> - we
					all have to start somewhere; so, if you’d rather read the first steps than
					follow this tutorial, then feel free to click here.<br/><b>• Tutorials</b> - if you click on
					this option, then you&apos;ll see another version of this tutorial. However, it’s
					always handy to know where to find these.<br/><b>• Workbench</b> - the workbench is the main
					interface for performing your plot analysis and other tasks: this is the place
					where you will do all your work.
					<br/>We won&apos;t go into all the features or what you
					will find by clicking on the above, as I know you&apos;re raring to go. But, I would
					recommend you explore and familiarise yourself with those elements when you have
					the time.
					<br/>For the next sections, if you&apos;re an experienced computer user then you&apos;ll
					already know about <b>main menus</b>, <b>context-sensitive menus</b> and <b>toolbars</b>; if this is the
					case, feel free to skip them. However, I would recommend that you do read the
					section on <b>Views</b> as they are an important component of Debrief (starting at section 1.6).
				</intro>
				<onCompletion>However, as with any new application, it&apos;s a good idea to
					configure it exactly how you want it for your own purposes. In Debrief, these
					are called <b>Preferences</b> and, though you don’t know that much about the
					software as yet, you will understand each of these settings.</onCompletion>
				<param name="id" value="org.mwc.debrief.help.started.welcome_withCHARTS_Debrief">
				</param>
				<param name="showIntro" value="true">
				</param>
				<param name="path" value="welcomewithCHARTS.xml">
				</param>
			</task>
		</taskGroup>




		<taskGroup kind="sequence" name="Defining your workspace"
			skip="false">
			<intro>
				In comparison with prior versions of Debrief, Debrief NG introduces
				the concept of a Workspace - a central repository for your assorted
				analysis-related documents. Within this workspace your work is
				grouped into individual projects: thus you can quickly switch
				between concurrent analysis tasks. Debrief&apos;s provision of
				projects allows you to quickly drag and drop Debrief data-files and
				plots into the editor.
			</intro>
			<onCompletion>
				Right, Debrief now knows where to find your data. In the next series of
				steps you will load and examine some data.
			</onCompletion>
			<task kind="cheatsheet" name="Generating a project" skip="true">
				<intro>
					Right, we&apos;ll start off by creating a Project that will contain our
					work.  But, if the "Create Project" dialog prompted you to create a project,
					and load some sample data - then you can skip this part.
				</intro>
				<onCompletion>
					You&apos;ve now created a project into which you can store your Debrief data
				</onCompletion>
				<param name="id" value="org.mwc.debrief.help.started.generate_project">
				</param>
				<param name="showIntro" value="true">
				</param>
				<param name="path" value="GenerateProject.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Finding your data" skip="true">
				<intro>
					If you already have one or more folders containing Debrief data,
					you can add them to your Debrief NG project (or load sample data
					that was installed within Debrief NG).
					If you&apos;ve haven&apos;t got any sample data, or if you can
					already see the
					<b>Sample Data</b>
					folder in your
					<b>Navigator</b>
					, you can skip this task.
				</intro>
				<onCompletion>
					You can now repeat this process to create links to your other Debrief
					data directories.
				</onCompletion>
				<param name="id" value="org.mwc.debrief.help.started.existing_data">
				</param>
				<param name="path" value="FindingYourData.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Configuring library data" skip="true">
				<intro>
					Debrief can plot information from library datasets to add context
					to the current view.
					Because of their typical size, some of these datasets are not distributed with
					Debrief, but should be obtained separately.
				</intro>
				<onCompletion>
				</onCompletion>
				<param name="path" value="ConfigLegacyData.xml">
				</param>
			</task>
		</taskGroup>
		<taskGroup kind="sequence" name="Viewing data" skip="false">
			<intro>
				This series of steps will guide you through creating and populating a new Debrief plot.
			</intro>
			<task kind="cheatsheet" name="Creating a new plot" skip="false">
				<intro>
					We will now use Debrief&apos;s New Plot wizard to create a plot ready
					for import of data-files.
				</intro>
				<onCompletion>
					Note that we didn&apos;t have to use the wizard steps, we could have
					inserted chart features into our Plot by hand using the Chart
					Features menu.
				</onCompletion>
				<param name="id" value="org.mwc.debrief.help.started.create_plot">
				</param>
				<param name="path" value="CreatePlot.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Importing some existing data"
				skip="false">
				<intro>
					At last we&apos;re about to view some actual vessel tracks.
				</intro>
				<param name="id" value="org.mwc.debrief.help.started.loading_data">
				</param>
				<param name="path" value="ImportingData.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Make some changes" skip="false">
				<intro>
					Now we&apos;ve got a complex plot open, we&apos;ll experiment with
					making some changes to it.
				</intro>
				<param name="path" value="EditingYourData.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Learn more about the UI" skip="false">
				<intro>
					Here you&apos;ll learn more about the Debrief user interface
				</intro>
				<param name="path" value="ViewHelpForUI.xml">
				</param>
			</task>
			<task kind="cheatsheet" name="Bonus - play with some data" skip="false">
				<intro>
					This is a bonus task, where you get to really manipulate some data.
				</intro>
				<onCompletion>
					You&apos;ve now mastered the initial steps of using Debrief.
					<i>NoPrint</i>
					<br />Why
					not go back to the Welcome view (there&apos;s a
					<b>Restore Welcome</b>
					link at the top of this view).
					The
					<b>Using Debrief in analysis</b>
					cheat sheet is a logical next step.
					<i>NoPrint</i>
					&apos;
						<br />Ok,
						you&apos;ve finished your first cheat sheet, why not try the
						"Using Debrief in analysis" on next.
					&apos;
				</onCompletion>
				<param name="path" value="../sensor/AnalysingSensorData.xml">
				</param>
			</task>
		</taskGroup>
	</taskGroup>
</compositeCheatsheet>
